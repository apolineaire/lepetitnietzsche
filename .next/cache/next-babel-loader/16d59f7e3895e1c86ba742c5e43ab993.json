{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/pierre-emmanueldenys/lepetitnietzsche/src/components/Blockquote.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nexport class Blockquote extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleBlockQuoteHeight\", ref => {\n      if (ref) {\n        console.log('ref current', ref); // console.log('ref', ref.offsetHeight())\n      } // storeBlockHeight(blockHeight)\n\n    });\n\n    _defineProperty(this, \"toggleParagraph\", () => {\n      console.log(\"ðŸ¥‰\", this.blockquoteRef.current);\n    });\n\n    this.blockquoteRef = React.createRef();\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, __jsx(\"blockquote\", {\n      ref: this.blockquoteRef,\n      onClick: () => this.toggleParagraph(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.props.title), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"-> \", this.props.quote)));\n  }\n\n}\nexport default Blockquote;","map":{"version":3,"sources":["/Users/pierre-emmanueldenys/lepetitnietzsche/src/components/Blockquote.tsx"],"names":["React","Blockquote","Component","constructor","props","ref","console","log","blockquoteRef","current","createRef","render","toggleParagraph","title","quote"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAUA,OAAO,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAyC;AAC5CC,EAAAA,WAAW,CAACC,KAAD,EAAuB;AAC9B,UAAMA,KAAN;;AAD8B,oDAORC,GAAD,IAAkB;AACvC,UAAGA,GAAH,EAAO;AACHC,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,GAA3B,EADG,CAEH;AACH,OAJsC,CAKvC;;AACH,KAbiC;;AAAA,6CAef,MAAW;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiB,KAAKC,aAAL,CAAmBC,OAApC;AACH,KAjBiC;;AAE9B,SAAKD,aAAL,GAAqBR,KAAK,CAACU,SAAN,EAArB;AACH;;AAgBDC,EAAAA,MAAM,GAAG;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,GAAG,EAAE,KAAKH,aADd;AAEI,MAAA,OAAO,EAAE,MAAM,KAAKI,eAAL,EAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKR,KAAL,CAAWS,KAAhB,CAJA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAO,KAAKT,KAAL,CAAWU,KAAlB,CALA,CADJ,CADJ;AAWH;;AAjC2C;AAoChD,eAAeb,UAAf","sourcesContent":["import React from 'react'\n\n\ninterface BlockQuoteProps {\n    title:string,\n    quote:string,\n    showParagraph:boolean,\n    toggleParagraph: () => {}\n}\n\nexport class Blockquote extends React.Component {\n    constructor(props:BlockQuoteProps){\n        super(props);\n        this.blockquoteRef = React.createRef()\n    }\n\n    blockquoteRef:any\n\n    handleBlockQuoteHeight = (ref:any):void => {\n        if(ref){\n            console.log('ref current', ref)\n            // console.log('ref', ref.offsetHeight())\n        }\n        // storeBlockHeight(blockHeight)\n    }\n\n    toggleParagraph =  ():void => {\n        console.log(\"ðŸ¥‰\",this.blockquoteRef.current)\n    }\n \n    render() {\n        \n        return (\n            <div>\n                <blockquote \n                    ref={this.blockquoteRef} \n                    onClick={() => this.toggleParagraph()}\n                >\n                <h2>{this.props.title}</h2>\n                <p>-> {this.props.quote}</p>\n            </blockquote>\n            </div>\n        )\n    }\n}\n\nexport default Blockquote\n"]},"metadata":{},"sourceType":"module"}