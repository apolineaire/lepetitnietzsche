{"ast":null,"code":"import _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/pierre-emmanueldenys/lepetitnietzsche/src/components/Quote.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    p{\\n        line-height:1.6\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nblockquote{\\n        border-radius:5px;\\n        background-color:\", \";\\n        border-left: 5px solid \", \";\\n        font-family:\\\"Space Mono\\\", monospace;\\n        margin:5rem 0;\\n        padding-left: 2rem;\\n        h2{\\n            font-size:2.2rem;\\n            color: \", \";\\n            margin: 1rem 0;\\n            padding: 1rem 0 0 0;\\n        }\\n        p{\\n            margin: 0 0 2rem 0;\\n            padding: 0 0 2rem 0;\\n            line-height:1.2;\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from 'styled-components';\nvar QuoteContainer = styled.div(_templateObject(), function (props) {\n  return props.theme.colors.gray;\n}, function (props) {\n  return props.theme.colors.blue;\n}, function (props) {\n  return props.theme.colors.blue;\n});\nvar ParagraphContainer = styled.div(_templateObject2());\n\nvar Quote = function Quote(props) {\n  var _renderAnswer = function _renderAnswer() {\n    var copy = _objectSpread({}, props.answer);\n\n    var arrayOfPargraph = _Object$values(copy);\n\n    console.log('arrayOfPargraph', arrayOfPargraph);\n    return arrayOfPargraph.map(function (paragraph) {\n      return __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, paragraph);\n    });\n  };\n\n  return __jsx(QuoteContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(\"blockquote\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, props.title), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"-> \", props.quote)), props.answer ? __jsx(ParagraphContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, _renderAnswer()) : null);\n};\n\nexport default Quote;","map":{"version":3,"sources":["/Users/pierre-emmanueldenys/lepetitnietzsche/src/components/Quote.tsx"],"names":["styled","QuoteContainer","div","props","theme","colors","gray","blue","ParagraphContainer","Quote","_renderAnswer","copy","answer","arrayOfPargraph","console","log","map","paragraph","title","quote"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,cAAc,GAAGD,MAAM,CAACE,GAAV,oBAGO,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,IAAvB;AAAA,CAHZ,EAIa,UAAAH,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBE,IAAvB;AAAA,CAJlB,EAUC,UAAAJ,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBE,IAAvB;AAAA,CAVN,CAApB;AAsBA,IAAMC,kBAAkB,GAAGR,MAAM,CAACE,GAAV,oBAAxB;;AAYA,IAAMO,KAAS,GAAG,SAAZA,KAAY,CAACN,KAAD,EAAsB;AAEpC,MAAMO,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB,QAAIC,IAAI,qBAAOR,KAAK,CAACS,MAAb,CAAR;;AACA,QAAIC,eAAe,GAAG,eAAcF,IAAd,CAAtB;;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,eAA/B;AACA,WAAOA,eAAe,CAACG,GAAhB,CAAoB,UAACC,SAAD;AAAA,aAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,SAAJ,CAAnB;AAAA,KAApB,CAAP;AACH,GALD;;AAMA,SACI,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKd,KAAK,CAACe,KAAX,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAOf,KAAK,CAACgB,KAAb,CAFJ,CADJ,EAMQhB,KAAK,CAACS,MAAN,GACA,MAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCF,aAAa,EADd,CADA,GAKA,IAXR,CADJ;AAgBH,CAxBD;;AA0BA,eAAeD,KAAf","sourcesContent":["import styled from 'styled-components'\n\nconst QuoteContainer = styled.div`\nblockquote{\n        border-radius:5px;\n        background-color:${props => props.theme.colors.gray};\n        border-left: 5px solid ${props => props.theme.colors.blue};\n        font-family:\"Space Mono\", monospace;\n        margin:5rem 0;\n        padding-left: 2rem;\n        h2{\n            font-size:2.2rem;\n            color: ${props => props.theme.colors.blue};\n            margin: 1rem 0;\n            padding: 1rem 0 0 0;\n        }\n        p{\n            margin: 0 0 2rem 0;\n            padding: 0 0 2rem 0;\n            line-height:1.2;\n        }\n    }\n`\n\nconst ParagraphContainer = styled.div`\n    p{\n        line-height:1.6\n    }\n`\n\ninterface QuoteProps {\n    quote:string,\n    title:string,\n    answer:any,\n}\n\nconst Quote:any = (props:QuoteProps) => {\n\n    const _renderAnswer = () => {\n        let copy = {...props.answer};\n        let arrayOfPargraph = Object.values(copy);\n        console.log('arrayOfPargraph', arrayOfPargraph)\n        return arrayOfPargraph.map((paragraph:any) => <p>{paragraph}</p>)\n    }\n    return (\n        <QuoteContainer>\n            <blockquote>\n                <h2>{props.title}</h2>\n                <p>-> {props.quote}</p>\n            </blockquote>\n            {\n                props.answer ?\n                <ParagraphContainer>\n                {_renderAnswer()}\n                </ParagraphContainer>\n                :\n                null\n            }\n        </QuoteContainer>\n    )\n}\n\nexport default Quote\n"]},"metadata":{},"sourceType":"module"}