{"ast":null,"code":"import _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/pierre-emmanueldenys/lepetitnietzsche/src/components/Quote.tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    p{\\n        font-size:2rem;\\n        line-height:1.6;\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nmargin-bottom: 6rem;\\nblockquote{\\n        border-radius:5px;\\n        background-color:\", \";\\n        border-left: 5px solid \", \";\\n        font-family:\\\"Space Mono\\\", monospace;\\n        margin:3rem 0;\\n        padding-left: 2rem;\\n        h2{\\n            font-size:2.2rem;\\n            color: \", \";\\n            margin: 1rem 0;\\n            padding: 1rem 0 0 0;\\n        }\\n        p{\\n            margin: 0 0 2rem 0;\\n            padding: 0 0 2rem 0;\\n            line-height:1.2;\\n            font-size:2rem;\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useState } from 'react';\nimport React from 'react';\nimport styled from 'styled-components';\nimport Blockquote from './Blockquote';\nvar QuoteContainer = styled.div(_templateObject(), function (props) {\n  return props.theme.colors.gray;\n}, function (props) {\n  return props.theme.colors.blue;\n}, function (props) {\n  return props.theme.colors.blue;\n});\nvar ParagraphContainer = styled.div(_templateObject2());\n\nvar Quote = function Quote(props) {\n  var _useState = useState(false),\n      showParagraph = _useState[0],\n      toggleParagraph = _useState[1]; // const [blockHeight, storeBlockHeight] = useState(0)\n\n\n  var _renderAnswer = function _renderAnswer() {\n    var copy = _objectSpread({}, props.answer);\n\n    var arrayOfPargraph = _Object$values(copy);\n\n    return arrayOfPargraph.map(function (paragraph) {\n      return __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, paragraph);\n    });\n  };\n\n  return __jsx(QuoteContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(Blockquote, {\n    title: props.title,\n    quote: props.quote // toggleParagraph={toggleParagraph} \n    ,\n    showParagraph: showParagraph,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), props.answer && showParagraph ? __jsx(ParagraphContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, _renderAnswer()) : null);\n};\n\nexport default Quote;","map":{"version":3,"sources":["/Users/pierre-emmanueldenys/lepetitnietzsche/src/components/Quote.tsx"],"names":["useState","React","styled","Blockquote","QuoteContainer","div","props","theme","colors","gray","blue","ParagraphContainer","Quote","showParagraph","toggleParagraph","_renderAnswer","copy","answer","arrayOfPargraph","map","paragraph","title","quote"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,IAAMC,cAAc,GAAGF,MAAM,CAACG,GAAV,oBAIO,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,IAAvB;AAAA,CAJZ,EAKa,UAAAH,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBE,IAAvB;AAAA,CALlB,EAWC,UAAAJ,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBE,IAAvB;AAAA,CAXN,CAApB;AAwBA,IAAMC,kBAAkB,GAAGT,MAAM,CAACG,GAAV,oBAAxB;;AAaA,IAAMO,KAAS,GAAG,SAAZA,KAAY,CAACN,KAAD,EAAsB;AAAA,kBAEKN,QAAQ,CAAC,KAAD,CAFb;AAAA,MAE7Ba,aAF6B;AAAA,MAEdC,eAFc,iBAGpC;;;AAEA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAoB;AACtC,QAAIC,IAAI,qBAAOV,KAAK,CAACW,MAAb,CAAR;;AACA,QAAIC,eAAe,GAAG,eAAcF,IAAd,CAAtB;;AACA,WAAOE,eAAe,CAACC,GAAhB,CAAoB,UAACC,SAAD;AAAA,aAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,SAAJ,CAAnB;AAAA,KAApB,CAAP;AACH,GAJD;;AAMA,SACI,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AACI,IAAA,KAAK,EAAEd,KAAK,CAACe,KADjB;AAEI,IAAA,KAAK,EAAEf,KAAK,CAACgB,KAFjB,CAGI;AAHJ;AAII,IAAA,aAAa,EAAET,aAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAQQP,KAAK,CAACW,MAAN,IAAgBJ,aAAhB,GACA,MAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCE,aAAa,EADd,CADA,GAKA,IAbR,CADJ;AAkBH,CA7BD;;AA+BA,eAAeH,KAAf","sourcesContent":["import {useState} from 'react'\nimport React from 'react'\nimport styled from 'styled-components'\nimport Blockquote from './Blockquote'\n\nconst QuoteContainer = styled.div`\nmargin-bottom: 6rem;\nblockquote{\n        border-radius:5px;\n        background-color:${props => props.theme.colors.gray};\n        border-left: 5px solid ${props => props.theme.colors.blue};\n        font-family:\"Space Mono\", monospace;\n        margin:3rem 0;\n        padding-left: 2rem;\n        h2{\n            font-size:2.2rem;\n            color: ${props => props.theme.colors.blue};\n            margin: 1rem 0;\n            padding: 1rem 0 0 0;\n        }\n        p{\n            margin: 0 0 2rem 0;\n            padding: 0 0 2rem 0;\n            line-height:1.2;\n            font-size:2rem;\n        }\n    }\n`\n\nconst ParagraphContainer = styled.div`\n    p{\n        font-size:2rem;\n        line-height:1.6;\n    }\n`\n\ninterface QuoteProps {\n    quote:string,\n    title:string,\n    answer:any,\n}\n\nconst Quote:any = (props:QuoteProps) => {\n\n    const [showParagraph, toggleParagraph] = useState(false)\n    // const [blockHeight, storeBlockHeight] = useState(0)\n\n    const _renderAnswer = ():JSX.Element[] => {\n        let copy = {...props.answer};\n        let arrayOfPargraph = Object.values(copy);\n        return arrayOfPargraph.map((paragraph:any) => <p>{paragraph}</p>)\n    }\n\n    return (\n        <QuoteContainer>\n            <Blockquote \n                title={props.title}\n                quote={props.quote}\n                // toggleParagraph={toggleParagraph} \n                showParagraph={showParagraph}\n            />\n            {\n                props.answer && showParagraph ?\n                <ParagraphContainer>\n                {_renderAnswer()}\n                </ParagraphContainer>\n                :\n                null\n            }\n        </QuoteContainer>\n    )\n}\n\nexport default Quote\n"]},"metadata":{},"sourceType":"module"}