{"ast":null,"code":"import _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/pierre-emmanueldenys/lepetitnietzsche/src/components/Quote.tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    p{\\n        font-size:2rem;\\n        line-height:1.6;\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nmargin-bottom: 6rem;\\nblockquote{\\n        border-radius:5px;\\n        background-color:\", \";\\n        border-left: 5px solid \", \";\\n        font-family:\\\"Space Mono\\\", monospace;\\n        margin:3rem 0;\\n        padding-left: 2rem;\\n        h2{\\n            font-size:2.2rem;\\n            color: \", \";\\n            margin: 1rem 0;\\n            padding: 1rem 0 0 0;\\n        }\\n        p{\\n            margin: 0 0 2rem 0;\\n            padding: 0 0 2rem 0;\\n            line-height:1.2;\\n            font-size:2rem;\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport Blockquote from './Blockquote';\nvar QuoteContainer = styled.div(_templateObject(), function (props) {\n  return props.theme.colors.gray;\n}, function (props) {\n  return props.theme.colors.blue;\n}, function (props) {\n  return props.theme.colors.blue;\n});\nvar ParagraphContainer = styled.div(_templateObject2());\n\nvar Quote =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Quote, _React$Component);\n\n  function Quote(props) {\n    var _this;\n\n    _classCallCheck(this, Quote);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Quote).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      showParagraph: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderAnswer\", function () {\n      var copy = _objectSpread({}, _this.props.answer);\n\n      var arrayOfPargraph = _Object$values(copy);\n\n      return arrayOfPargraph.map(function (paragraph) {\n        return __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, paragraph);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleParagraph\", function () {\n      _this.setState({\n        showParagraph: !_this.state.showParagraph\n      }, function () {\n        if (_this.pRef) {\n          console.log('üë®‚ÄçüöÄ', _this.pRef);\n          window.scrollTo(_this.pRef);\n        }\n      });\n    });\n\n    _this.pRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(Quote, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      var showParagraph = this.state.showParagraph;\n      return __jsx(QuoteContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, __jsx(Blockquote, {\n        title: props.title,\n        quote: props.quote,\n        toggleParagraph: this.toggleParagraph,\n        showParagraph: this.state.showParagraph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        ref: this.pRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, props.answer && showParagraph ? __jsx(ParagraphContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, this._renderAnswer()) : null));\n    }\n  }]);\n\n  return Quote;\n}(React.Component);\n\nexport default Quote;","map":{"version":3,"sources":["/Users/pierre-emmanueldenys/lepetitnietzsche/src/components/Quote.tsx"],"names":["React","styled","Blockquote","QuoteContainer","div","props","theme","colors","gray","blue","ParagraphContainer","Quote","showParagraph","copy","answer","arrayOfPargraph","map","paragraph","setState","state","pRef","console","log","window","scrollTo","createRef","title","quote","toggleParagraph","_renderAnswer","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,IAAMC,cAAc,GAAGF,MAAM,CAACG,GAAV,oBAIO,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,IAAvB;AAAA,CAJZ,EAKa,UAAAH,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBE,IAAvB;AAAA,CALlB,EAWC,UAAAJ,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBE,IAAvB;AAAA,CAXN,CAApB;AAwBA,IAAMC,kBAAkB,GAAGT,MAAM,CAACG,GAAV,oBAAxB;;IAaMO,K;;;;;AACF,iBAAYN,KAAZ,EAA6B;AAAA;;AAAA;;AACzB,+EAAMA,KAAN;;AADyB,4DAKrB;AACJO,MAAAA,aAAa,EAAC;AADV,KALqB;;AAAA,oEAWb,YAAoB;AAChC,UAAIC,IAAI,qBAAO,MAAKR,KAAL,CAAWS,MAAlB,CAAR;;AACA,UAAIC,eAAe,GAAG,eAAcF,IAAd,CAAtB;;AACA,aAAOE,eAAe,CAACC,GAAhB,CAAoB,UAACC,SAAD;AAAA,eAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIA,SAAJ,CAAnB;AAAA,OAApB,CAAP;AACH,KAf4B;;AAAA,sEAiBX,YAAW;AACzB,YAAKC,QAAL,CAAc;AACVN,QAAAA,aAAa,EAAC,CAAC,MAAKO,KAAL,CAAWP;AADhB,OAAd,EAGA,YAAM;AACF,YAAG,MAAKQ,IAAR,EAAc;AACVC,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB,MAAKF,IAAzB;AACAG,UAAAA,MAAM,CAACC,QAAP,CAAgB,MAAKJ,IAArB;AACH;AACJ,OARD;AASH,KA3B4B;;AAEzB,UAAKA,IAAL,GAAYpB,KAAK,CAACyB,SAAN,EAAZ;AAFyB;AAG5B;;;;6BA0BO;AACJ,UAAMpB,KAAK,GAAG,KAAKA,KAAnB;AADI,UAEGO,aAFH,GAEoB,KAAKO,KAFzB,CAEGP,aAFH;AAIJ,aACI,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,MAAC,UAAD;AACI,QAAA,KAAK,EAAEP,KAAK,CAACqB,KADjB;AAEI,QAAA,KAAK,EAAErB,KAAK,CAACsB,KAFjB;AAGI,QAAA,eAAe,EAAE,KAAKC,eAH1B;AAII,QAAA,aAAa,EAAE,KAAKT,KAAL,CAAWP,aAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAOI;AAAK,QAAA,GAAG,EAAE,KAAKQ,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEAf,KAAK,CAACS,MAAN,IAAgBF,aAAhB,GAEA,MAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKiB,aAAL,EADL,CAFA,GAMA,IARA,CAPJ,CADJ;AAqBP;;;;EAvDmB7B,KAAK,CAAC8B,S;;AA0D1B,eAAenB,KAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport Blockquote from './Blockquote'\n\nconst QuoteContainer = styled.div`\nmargin-bottom: 6rem;\nblockquote{\n        border-radius:5px;\n        background-color:${props => props.theme.colors.gray};\n        border-left: 5px solid ${props => props.theme.colors.blue};\n        font-family:\"Space Mono\", monospace;\n        margin:3rem 0;\n        padding-left: 2rem;\n        h2{\n            font-size:2.2rem;\n            color: ${props => props.theme.colors.blue};\n            margin: 1rem 0;\n            padding: 1rem 0 0 0;\n        }\n        p{\n            margin: 0 0 2rem 0;\n            padding: 0 0 2rem 0;\n            line-height:1.2;\n            font-size:2rem;\n        }\n    }\n`\n\nconst ParagraphContainer = styled.div`\n    p{\n        font-size:2rem;\n        line-height:1.6;\n    }\n`\n\ninterface QuoteProps {\n    quote:string,\n    title:string,\n    answer:any,\n}\n\nclass Quote extends React.Component<QuoteProps> {\n    constructor(props:QuoteProps){\n        super(props);\n        this.pRef = React.createRef()\n    }\n    \n    state = {\n        showParagraph:false\n    }\n\n    pRef:any\n\n    _renderAnswer = ():JSX.Element[] => {\n        let copy = {...this.props.answer};\n        let arrayOfPargraph = Object.values(copy);\n        return arrayOfPargraph.map((paragraph:any) => <p>{paragraph}</p>)\n    }\n\n    toggleParagraph = ():void => {\n        this.setState({\n            showParagraph:!this.state.showParagraph\n        }, \n        () => {\n            if(this.pRef) {\n                console.log('üë®‚ÄçüöÄ',this.pRef)\n                window.scrollTo(this.pRef)\n            }\n        })\n    }\n\n    render(){\n        const props = this.props\n        const {showParagraph} = this.state\n\n        return (\n            <QuoteContainer>\n            <Blockquote \n                title={props.title}\n                quote={props.quote}\n                toggleParagraph={this.toggleParagraph} \n                showParagraph={this.state.showParagraph}\n                />\n                <div ref={this.pRef}>\n            {\n                props.answer && showParagraph ?\n                \n                <ParagraphContainer>\n                    {this._renderAnswer()}\n                </ParagraphContainer>\n                :\n                null\n            }\n            </div>\n        </QuoteContainer>\n    )\n}\n}\n\nexport default Quote\n"]},"metadata":{},"sourceType":"module"}