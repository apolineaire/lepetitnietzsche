{"ast":null,"code":"var _jsxFileName = \"/Users/pierre-emmanueldenys/lepetitnietzsche/src/components/Quote.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nconst QuoteContainer = styled.div`\nblockquote{\n        border-radius:5px;\n        background-color:${props => props.theme.colors.gray};\n        border-left: 5px solid ${props => props.theme.colors.blue};\n        font-family:\"Space Mono\", monospace;\n        margin:3rem 0;\n        padding-left: 2rem;\n        h2{\n            font-size:2.2rem;\n            color: ${props => props.theme.colors.blue};\n            margin: 1rem 0;\n            padding: 1rem 0 0 0;\n        }\n        p{\n            margin: 0 0 2rem 0;\n            padding: 0 0 2rem 0;\n            line-height:1.2;\n        }\n    }\n`;\n\nconst Quote = props => {\n  const _renderAnswer = () => {\n    console.log(props.answer); // let arrayOfPargraph = {...props.answer}.values()\n    // console.log(arrayOfPargraph)\n    // return arrayOfPargraph.map((paragraph:string) => <p>{paragraph}</p>)\n  };\n\n  return __jsx(QuoteContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(\"blockquote\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, props.title), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"-> \", props.quote)), props.answer ? _renderAnswer() : null);\n};\n\nexport default Quote;","map":{"version":3,"sources":["/Users/pierre-emmanueldenys/lepetitnietzsche/src/components/Quote.tsx"],"names":["styled","QuoteContainer","div","props","theme","colors","gray","blue","Quote","_renderAnswer","console","log","answer","title","quote"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,cAAc,GAAGD,MAAM,CAACE,GAAI;;;2BAGPC,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,IAAK;iCAC3BH,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBE,IAAK;;;;;;qBAM7CJ,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBE,IAAK;;;;;;;;;;CAVtD;;AA4BA,MAAMC,KAAS,GAAIL,KAAD,IAAsB;AAEpC,QAAMM,aAAa,GAAG,MAAM;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACS,MAAlB,EADwB,CAExB;AACA;AACA;AACH,GALD;;AAMA,SACI,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKT,KAAK,CAACU,KAAX,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAOV,KAAK,CAACW,KAAb,CAFJ,CADJ,EAMQX,KAAK,CAACS,MAAN,GACAH,aAAa,EADb,GAGA,IATR,CADJ;AAcH,CAtBD;;AAwBA,eAAeD,KAAf","sourcesContent":["import styled from 'styled-components'\n\nconst QuoteContainer = styled.div`\nblockquote{\n        border-radius:5px;\n        background-color:${props => props.theme.colors.gray};\n        border-left: 5px solid ${props => props.theme.colors.blue};\n        font-family:\"Space Mono\", monospace;\n        margin:3rem 0;\n        padding-left: 2rem;\n        h2{\n            font-size:2.2rem;\n            color: ${props => props.theme.colors.blue};\n            margin: 1rem 0;\n            padding: 1rem 0 0 0;\n        }\n        p{\n            margin: 0 0 2rem 0;\n            padding: 0 0 2rem 0;\n            line-height:1.2;\n        }\n    }\n`\n\ninterface QuoteProps {\n    quote:string,\n    title:string,\n    answer:any,\n}\n\nconst Quote:any = (props:QuoteProps) => {\n\n    const _renderAnswer = () => {\n        console.log(props.answer)\n        // let arrayOfPargraph = {...props.answer}.values()\n        // console.log(arrayOfPargraph)\n        // return arrayOfPargraph.map((paragraph:string) => <p>{paragraph}</p>)\n    }\n    return (\n        <QuoteContainer>\n            <blockquote>\n                <h2>{props.title}</h2>\n                <p>-> {props.quote}</p>\n            </blockquote>\n            {\n                props.answer ?\n                _renderAnswer()\n                :\n                null\n            }\n        </QuoteContainer>\n    )\n}\n\nexport default Quote\n"]},"metadata":{},"sourceType":"module"}