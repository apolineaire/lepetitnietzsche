{"ast":null,"code":"import _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/pierre-emmanueldenys/lepetitnietzsche/src/components/Quote.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nimport Blockquote from './Blockquote';\nconst QuoteContainer = styled.div`\nmargin-bottom: 6rem;\nblockquote{\n        border-radius:5px;\n        background-color:${props => props.theme.colors.gray};\n        border-left: 5px solid ${props => props.theme.colors.blue};\n        font-family:\"Space Mono\", monospace;\n        margin:3rem 0;\n        padding-left: 2rem;\n        h2{\n            font-size:2.2rem;\n            color: ${props => props.theme.colors.blue};\n            margin: 1rem 0;\n            padding: 1rem 0 0 0;\n        }\n        p{\n            margin: 0 0 2rem 0;\n            padding: 0 0 2rem 0;\n            line-height:1.2;\n            font-size:2rem;\n        }\n    }\n`;\nconst ParagraphContainer = styled.div`\n    p{\n        font-size:2rem;\n        line-height:1.6;\n    }\n`;\n\nclass Quote extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", {\n      showParagraph: false\n    });\n\n    _defineProperty(this, \"_renderAnswer\", () => {\n      let copy = _objectSpread({}, this.props.answer);\n\n      let arrayOfPargraph = _Object$values(copy);\n\n      return arrayOfPargraph.map(paragraph => __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, paragraph));\n    });\n\n    _defineProperty(this, \"toggleParagraph\", () => {\n      this.setState({\n        showParagraph: !this.state.showParagraph\n      }, () => {\n        if (this.pRef) {\n          console.log('üë®‚ÄçüöÄ', this.pRef); // window.scroll(0,this.pRef.offsetHeight)\n        }\n      });\n    });\n\n    this.pRef = React.createRef();\n  }\n\n  render() {\n    const props = this.props;\n    const {\n      showParagraph\n    } = this.state;\n    return __jsx(QuoteContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, __jsx(Blockquote, {\n      title: props.title,\n      quote: props.quote,\n      toggleParagraph: this.toggleParagraph,\n      showParagraph: this.state.showParagraph,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      ref: this.pRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, props.answer && showParagraph ? __jsx(ParagraphContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this._renderAnswer()) : null));\n  }\n\n}\n\nexport default Quote;","map":{"version":3,"sources":["/Users/pierre-emmanueldenys/lepetitnietzsche/src/components/Quote.tsx"],"names":["React","styled","Blockquote","QuoteContainer","div","props","theme","colors","gray","blue","ParagraphContainer","Quote","Component","constructor","showParagraph","copy","answer","arrayOfPargraph","map","paragraph","setState","state","pRef","console","log","createRef","render","title","quote","toggleParagraph","_renderAnswer"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,MAAMC,cAAc,GAAGF,MAAM,CAACG,GAAI;;;;2BAIPC,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,IAAK;iCAC3BH,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBE,IAAK;;;;;;qBAM7CJ,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBE,IAAK;;;;;;;;;;;CAXtD;AAwBA,MAAMC,kBAAkB,GAAGT,MAAM,CAACG,GAAI;;;;;CAAtC;;AAaA,MAAMO,KAAN,SAAoBX,KAAK,CAACY,SAA1B,CAAgD;AAC5CC,EAAAA,WAAW,CAACR,KAAD,EAAkB;AACzB,UAAMA,KAAN;;AADyB,mCAKrB;AACJS,MAAAA,aAAa,EAAC;AADV,KALqB;;AAAA,2CAWb,MAAoB;AAChC,UAAIC,IAAI,qBAAO,KAAKV,KAAL,CAAWW,MAAlB,CAAR;;AACA,UAAIC,eAAe,GAAG,eAAcF,IAAd,CAAtB;;AACA,aAAOE,eAAe,CAACC,GAAhB,CAAqBC,SAAD,IAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,SAAJ,CAAvC,CAAP;AACH,KAf4B;;AAAA,6CAiBX,MAAW;AACzB,WAAKC,QAAL,CAAc;AACVN,QAAAA,aAAa,EAAC,CAAC,KAAKO,KAAL,CAAWP;AADhB,OAAd,EAGA,MAAM;AACF,YAAG,KAAKQ,IAAR,EAAc;AACVC,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB,KAAKF,IAAzB,EADU,CAEV;AACH;AACJ,OARD;AASH,KA3B4B;;AAEzB,SAAKA,IAAL,GAAYtB,KAAK,CAACyB,SAAN,EAAZ;AACH;;AA0BDC,EAAAA,MAAM,GAAE;AACJ,UAAMrB,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAM;AAACS,MAAAA;AAAD,QAAkB,KAAKO,KAA7B;AAEA,WACI,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,UAAD;AACI,MAAA,KAAK,EAAEhB,KAAK,CAACsB,KADjB;AAEI,MAAA,KAAK,EAAEtB,KAAK,CAACuB,KAFjB;AAGI,MAAA,eAAe,EAAE,KAAKC,eAH1B;AAII,MAAA,aAAa,EAAE,KAAKR,KAAL,CAAWP,aAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAOI;AAAK,MAAA,GAAG,EAAE,KAAKQ,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEAjB,KAAK,CAACW,MAAN,IAAgBF,aAAhB,GAEA,MAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKgB,aAAL,EADL,CAFA,GAMA,IARA,CAPJ,CADJ;AAqBP;;AAvD+C;;AA0DhD,eAAenB,KAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport Blockquote from './Blockquote'\n\nconst QuoteContainer = styled.div`\nmargin-bottom: 6rem;\nblockquote{\n        border-radius:5px;\n        background-color:${props => props.theme.colors.gray};\n        border-left: 5px solid ${props => props.theme.colors.blue};\n        font-family:\"Space Mono\", monospace;\n        margin:3rem 0;\n        padding-left: 2rem;\n        h2{\n            font-size:2.2rem;\n            color: ${props => props.theme.colors.blue};\n            margin: 1rem 0;\n            padding: 1rem 0 0 0;\n        }\n        p{\n            margin: 0 0 2rem 0;\n            padding: 0 0 2rem 0;\n            line-height:1.2;\n            font-size:2rem;\n        }\n    }\n`\n\nconst ParagraphContainer = styled.div`\n    p{\n        font-size:2rem;\n        line-height:1.6;\n    }\n`\n\ninterface QuoteProps {\n    quote:string,\n    title:string,\n    answer:any,\n}\n\nclass Quote extends React.Component<QuoteProps> {\n    constructor(props:QuoteProps){\n        super(props);\n        this.pRef = React.createRef()\n    }\n    \n    state = {\n        showParagraph:false\n    }\n\n    pRef:any\n\n    _renderAnswer = ():JSX.Element[] => {\n        let copy = {...this.props.answer};\n        let arrayOfPargraph = Object.values(copy);\n        return arrayOfPargraph.map((paragraph:any) => <p>{paragraph}</p>)\n    }\n\n    toggleParagraph = ():void => {\n        this.setState({\n            showParagraph:!this.state.showParagraph\n        }, \n        () => {\n            if(this.pRef) {\n                console.log('üë®‚ÄçüöÄ',this.pRef)\n                // window.scroll(0,this.pRef.offsetHeight)\n            }\n        })\n    }\n\n    render(){\n        const props = this.props\n        const {showParagraph} = this.state\n\n        return (\n            <QuoteContainer>\n            <Blockquote \n                title={props.title}\n                quote={props.quote}\n                toggleParagraph={this.toggleParagraph} \n                showParagraph={this.state.showParagraph}\n                />\n                <div ref={this.pRef}>\n            {\n                props.answer && showParagraph ?\n                \n                <ParagraphContainer>\n                    {this._renderAnswer()}\n                </ParagraphContainer>\n                :\n                null\n            }\n            </div>\n        </QuoteContainer>\n    )\n}\n}\n\nexport default Quote\n"]},"metadata":{},"sourceType":"module"}