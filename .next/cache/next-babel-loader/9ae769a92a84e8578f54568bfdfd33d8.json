{"ast":null,"code":"import _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/pierre-emmanueldenys/lepetitnietzsche/src/components/Quote.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport styled from 'styled-components';\nconst QuoteContainer = styled.div`\nmargin-bottom: 6rem;\nblockquote{\n        border-radius:5px;\n        background-color:${props => props.theme.colors.gray};\n        border-left: 5px solid ${props => props.theme.colors.blue};\n        font-family:\"Space Mono\", monospace;\n        margin:3rem 0;\n        padding-left: 2rem;\n        h2{\n            font-size:2.2rem;\n            color: ${props => props.theme.colors.blue};\n            margin: 1rem 0;\n            padding: 1rem 0 0 0;\n        }\n        p{\n            margin: 0 0 2rem 0;\n            padding: 0 0 2rem 0;\n            line-height:1.2;\n            font-size:2rem;\n        }\n    }\n`;\nconst ParagraphContainer = styled.div`\n    p{\n        font-size:2rem;\n        line-height:1.6;\n    }\n`;\n\nconst Quote = props => {\n  const {\n    0: showParagraph,\n    1: toggleParagraph\n  } = useState(false); // const [blockHeight, storeBlockHeight] = useState(0)\n\n  const _renderAnswer = () => {\n    let copy = _objectSpread({}, props.answer);\n\n    let arrayOfPargraph = _Object$values(copy);\n\n    return arrayOfPargraph.map(paragraph => __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, paragraph));\n  };\n\n  const handleClickOnBlockquote = () => toggleParagraph(!showParagraph);\n\n  const handleBlockQuoteHeight = ref => {\n    if (ref) {\n      console.log('ref target', ref.target);\n      console.log('ref', ref.offsetHeight());\n    } // storeBlockHeight(blockHeight)\n\n  };\n\n  return __jsx(QuoteContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(\"blockquote\", {\n    ref: ref => handleBlockQuoteHeight(ref),\n    onClick: () => handleClickOnBlockquote(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, props.title), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"-> \", props.quote)), props.answer && showParagraph ? __jsx(ParagraphContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, _renderAnswer()) : null);\n};\n\nexport default Quote;","map":{"version":3,"sources":["/Users/pierre-emmanueldenys/lepetitnietzsche/src/components/Quote.tsx"],"names":["useState","styled","QuoteContainer","div","props","theme","colors","gray","blue","ParagraphContainer","Quote","showParagraph","toggleParagraph","_renderAnswer","copy","answer","arrayOfPargraph","map","paragraph","handleClickOnBlockquote","handleBlockQuoteHeight","ref","console","log","target","offsetHeight","title","quote"],"mappings":";;;;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,cAAc,GAAGD,MAAM,CAACE,GAAI;;;;2BAIPC,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,IAAK;iCAC3BH,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBE,IAAK;;;;;;qBAM7CJ,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBE,IAAK;;;;;;;;;;;CAXtD;AAwBA,MAAMC,kBAAkB,GAAGR,MAAM,CAACE,GAAI;;;;;CAAtC;;AAaA,MAAMO,KAAS,GAAIN,KAAD,IAAsB;AAEpC,QAAM;AAAA,OAACO,aAAD;AAAA,OAAgBC;AAAhB,MAAmCZ,QAAQ,CAAC,KAAD,CAAjD,CAFoC,CAGpC;;AAEA,QAAMa,aAAa,GAAG,MAAoB;AACtC,QAAIC,IAAI,qBAAOV,KAAK,CAACW,MAAb,CAAR;;AACA,QAAIC,eAAe,GAAG,eAAcF,IAAd,CAAtB;;AACA,WAAOE,eAAe,CAACC,GAAhB,CAAqBC,SAAD,IAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,SAAJ,CAAvC,CAAP;AACH,GAJD;;AAMA,QAAMC,uBAAuB,GAAI,MAAWP,eAAe,CAAC,CAACD,aAAF,CAA3D;;AAEA,QAAMS,sBAAsB,GAAIC,GAAD,IAAkB;AAC7C,QAAGA,GAAH,EAAO;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,GAAG,CAACG,MAA9B;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,GAAG,CAACI,YAAJ,EAAnB;AACH,KAJ4C,CAK7C;;AACH,GAND;;AAQA,SACI,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAY,IAAA,GAAG,EAAEJ,GAAG,IAAID,sBAAsB,CAACC,GAAD,CAA9C;AAAqD,IAAA,OAAO,EAAE,MAAMF,uBAAuB,EAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKf,KAAK,CAACsB,KAAX,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAOtB,KAAK,CAACuB,KAAb,CAFJ,CADJ,EAMQvB,KAAK,CAACW,MAAN,IAAgBJ,aAAhB,GACA,MAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCE,aAAa,EADd,CADA,GAKA,IAXR,CADJ;AAgBH,CArCD;;AAuCA,eAAeH,KAAf","sourcesContent":["import {useState} from 'react'\nimport styled from 'styled-components'\n\nconst QuoteContainer = styled.div`\nmargin-bottom: 6rem;\nblockquote{\n        border-radius:5px;\n        background-color:${props => props.theme.colors.gray};\n        border-left: 5px solid ${props => props.theme.colors.blue};\n        font-family:\"Space Mono\", monospace;\n        margin:3rem 0;\n        padding-left: 2rem;\n        h2{\n            font-size:2.2rem;\n            color: ${props => props.theme.colors.blue};\n            margin: 1rem 0;\n            padding: 1rem 0 0 0;\n        }\n        p{\n            margin: 0 0 2rem 0;\n            padding: 0 0 2rem 0;\n            line-height:1.2;\n            font-size:2rem;\n        }\n    }\n`\n\nconst ParagraphContainer = styled.div`\n    p{\n        font-size:2rem;\n        line-height:1.6;\n    }\n`\n\ninterface QuoteProps {\n    quote:string,\n    title:string,\n    answer:any,\n}\n\nconst Quote:any = (props:QuoteProps) => {\n\n    const [showParagraph, toggleParagraph] = useState(false)\n    // const [blockHeight, storeBlockHeight] = useState(0)\n\n    const _renderAnswer = ():JSX.Element[] => {\n        let copy = {...props.answer};\n        let arrayOfPargraph = Object.values(copy);\n        return arrayOfPargraph.map((paragraph:any) => <p>{paragraph}</p>)\n    }\n\n    const handleClickOnBlockquote =  ():void => toggleParagraph(!showParagraph)\n\n    const handleBlockQuoteHeight = (ref:any):void => {\n        if(ref){\n            console.log('ref target', ref.target)\n            console.log('ref', ref.offsetHeight())\n        }\n        // storeBlockHeight(blockHeight)\n    }\n\n    return (\n        <QuoteContainer>\n            <blockquote ref={ref => handleBlockQuoteHeight(ref)} onClick={() => handleClickOnBlockquote()}>\n                <h2>{props.title}</h2>\n                <p>-> {props.quote}</p>\n            </blockquote>\n            {\n                props.answer && showParagraph ?\n                <ParagraphContainer>\n                {_renderAnswer()}\n                </ParagraphContainer>\n                :\n                null\n            }\n        </QuoteContainer>\n    )\n}\n\nexport default Quote\n"]},"metadata":{},"sourceType":"module"}