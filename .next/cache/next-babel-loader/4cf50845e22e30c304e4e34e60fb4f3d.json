{"ast":null,"code":"import _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/pierre-emmanueldenys/lepetitnietzsche/src/components/Quote.tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    p{\\n        font-size:2rem;\\n        line-height:1.6;\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nmargin-bottom: 6rem;\\nblockquote{\\n        border-radius:5px;\\n        background-color:\", \";\\n        border-left: 5px solid \", \";\\n        font-family:\\\"Space Mono\\\", monospace;\\n        margin:3rem 0;\\n        padding-left: 2rem;\\n        h2{\\n            font-size:2.2rem;\\n            color: \", \";\\n            margin: 1rem 0;\\n            padding: 1rem 0 0 0;\\n        }\\n        p{\\n            margin: 0 0 2rem 0;\\n            padding: 0 0 2rem 0;\\n            line-height:1.2;\\n            font-size:2rem;\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport Blockquote from './Blockquote';\nvar QuoteContainer = styled.div(_templateObject(), function (props) {\n  return props.theme.colors.gray;\n}, function (props) {\n  return props.theme.colors.blue;\n}, function (props) {\n  return props.theme.colors.blue;\n});\nvar ParagraphContainer = styled.div(_templateObject2());\n\nvar Quote =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Quote, _React$Component);\n\n  function Quote(props) {\n    var _this;\n\n    _classCallCheck(this, Quote);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Quote).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      showParagraph: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderAnswer\", function () {\n      var copy = _objectSpread({}, _this.props.answer);\n\n      var arrayOfPargraph = _Object$values(copy);\n\n      return arrayOfPargraph.map(function (paragraph) {\n        return __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, paragraph);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleParagraph\", function () {\n      _this.setState({\n        showParagraph: !_this.state.showParagraph\n      }, function () {\n        if (_this.pRef) {\n          console.log(_this.pRef);\n          window.scrollTo(_this.pRef);\n        }\n      });\n    });\n\n    _this.pRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(Quote, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      var showParagraph = this.state.showParagraph;\n      return __jsx(QuoteContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, __jsx(Blockquote, {\n        title: props.title,\n        quote: props.quote,\n        toggleParagraph: this.toggleParagraph,\n        showParagraph: this.state.showParagraph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), props.answer && showParagraph ? __jsx(ParagraphContainer, {\n        ref: this.pRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, this._renderAnswer()) : null);\n    }\n  }]);\n\n  return Quote;\n}(React.Component);\n\nexport default Quote;","map":{"version":3,"sources":["/Users/pierre-emmanueldenys/lepetitnietzsche/src/components/Quote.tsx"],"names":["QuoteContainer","styled","props","ParagraphContainer","Quote","React","Component","showParagraph","copy","arrayOfPargraph","console","window"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport styled from 'styled-components'\nimport Blockquote from './Blockquote'\n\nconst QuoteContainer = styled.div`\nmargin-bottom: 6rem;\nblockquote{\n        border-radius:5px;\n        background-color:${props => props.theme.colors.gray};\n        border-left: 5px solid ${props => props.theme.colors.blue};\n        font-family:\"Space Mono\", monospace;\n        margin:3rem 0;\n        padding-left: 2rem;\n        h2{\n            font-size:2.2rem;\n            color: ${props => props.theme.colors.blue};\n            margin: 1rem 0;\n            padding: 1rem 0 0 0;\n        }\n        p{\n            margin: 0 0 2rem 0;\n            padding: 0 0 2rem 0;\n            line-height:1.2;\n            font-size:2rem;\n        }\n    }\n`\n\nconst ParagraphContainer = styled.div`\n    p{\n        font-size:2rem;\n        line-height:1.6;\n    }\n`\n\ninterface QuoteProps {\n    quote:string,\n    title:string,\n    answer:any,\n}\n\nclass Quote extends React.Component<QuoteProps> {\n    constructor(props:QuoteProps){\n        super(props);\n        this.pRef = React.createRef()\n    }\n    \n    state = {\n        showParagraph:false\n    }\n\n    pRef:any\n\n    _renderAnswer = ():JSX.Element[] => {\n        let copy = {...this.props.answer};\n        let arrayOfPargraph = Object.values(copy);\n        return arrayOfPargraph.map((paragraph:any) => <p>{paragraph}</p>)\n    }\n\n    toggleParagraph = ():void => {\n        \n        this.setState({\n            showParagraph:!this.state.showParagraph\n        }, () => {\n            if(this.pRef) {\n                console.log(this.pRef)\n                window.scrollTo(this.pRef)\n            }\n        })\n    }\n\n    render(){\n        const props = this.props\n        const {showParagraph} = this.state\n\n        return (\n            <QuoteContainer>\n            <Blockquote \n                title={props.title}\n                quote={props.quote}\n                toggleParagraph={this.toggleParagraph} \n                showParagraph={this.state.showParagraph}\n                />\n            {\n                props.answer && showParagraph ?\n                <ParagraphContainer ref={this.pRef}>\n                    {this._renderAnswer()}\n                </ParagraphContainer>\n                :\n                null\n            }\n        </QuoteContainer>\n    )\n}\n}\n\nexport default Quote\n"]},"metadata":{},"sourceType":"module"}