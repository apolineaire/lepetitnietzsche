{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/pierre-emmanueldenys/lepetitnietzsche/src/components/Blockquote.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nexport class Blockquote extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleClickOnBlockquote\", () => toggleParagraph(!showParagraph));\n\n    _defineProperty(this, \"handleBlockQuoteHeight\", ref => {\n      ref = React.createRef();\n\n      if (ref) {\n        console.log('ref current', ref); // console.log('ref', ref.offsetHeight())\n      } // storeBlockHeight(blockHeight)\n\n    });\n  }\n\n  render() {\n    const props = this.props;\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, __jsx(\"blockquote\", {\n      ref: ref => handleBlockQuoteHeight(ref),\n      onClick: () => handleClickOnBlockquote(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, props.title), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"-> \", props.quote)));\n  }\n\n}\nexport default Blockquote;","map":{"version":3,"sources":["/Users/pierre-emmanueldenys/lepetitnietzsche/src/components/Blockquote.tsx"],"names":["React","Blockquote","Component","constructor","props","toggleParagraph","showParagraph","ref","createRef","console","log","render","handleBlockQuoteHeight","handleClickOnBlockquote","title","quote"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAQA,OAAO,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAyC;AAC5CC,EAAAA,WAAW,CAACC,KAAD,EAAuB;AAC9B,UAAMA,KAAN;;AAD8B,qDAIP,MAAWC,eAAe,CAAC,CAACC,aAAF,CAJnB;;AAAA,oDAMRC,GAAD,IAAkB;AACvCA,MAAAA,GAAG,GAAGP,KAAK,CAACQ,SAAN,EAAN;;AACA,UAAGD,GAAH,EAAO;AACHE,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,GAA3B,EADG,CAEH;AACH,OALsC,CAMvC;;AACH,KAbiC;AAEjC;;AAaDI,EAAAA,MAAM,GAAG;AACL,UAAMP,KAAK,GAAG,KAAKA,KAAnB;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAY,MAAA,GAAG,EAAEG,GAAG,IAAIK,sBAAsB,CAACL,GAAD,CAA9C;AAAqD,MAAA,OAAO,EAAE,MAAMM,uBAAuB,EAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKT,KAAK,CAACU,KAAX,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAOV,KAAK,CAACW,KAAb,CAFA,CADJ,CADJ;AAQH;;AA1B2C;AA6BhD,eAAed,UAAf","sourcesContent":["import React from 'react'\n\n\ninterface BlockQuoteProps {\n    title:string,\n    quote:string\n}\n\nexport class Blockquote extends React.Component {\n    constructor(props:BlockQuoteProps){\n        super(props);\n    }\n\n    handleClickOnBlockquote =  ():void => toggleParagraph(!showParagraph)\n\n    handleBlockQuoteHeight = (ref:any):void => {\n        ref = React.createRef()\n        if(ref){\n            console.log('ref current', ref)\n            // console.log('ref', ref.offsetHeight())\n        }\n        // storeBlockHeight(blockHeight)\n    }\n\n    render() {\n        const props = this.props\n        return (\n            <div>\n                <blockquote ref={ref => handleBlockQuoteHeight(ref)} onClick={() => handleClickOnBlockquote()}>\n                <h2>{props.title}</h2>\n                <p>-> {props.quote}</p>\n            </blockquote>\n            </div>\n        )\n    }\n}\n\nexport default Blockquote\n"]},"metadata":{},"sourceType":"module"}