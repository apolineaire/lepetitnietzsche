{"version":3,"file":"static/webpack/static/development/pages/index.js.9163cee6cc1c643e7c61.hot-update.js","sources":["webpack:///./src/components/Quote.tsx"],"sourcesContent":["\nimport React from 'react'\nimport styled from 'styled-components'\nimport Blockquote from './Blockquote'\n\nconst QuoteContainer = styled.div`\nmargin-bottom: 6rem;\nblockquote{\n        border-radius:5px;\n        background-color:${props => props.theme.colors.gray};\n        border-left: 5px solid ${props => props.theme.colors.blue};\n        font-family:\"Space Mono\", monospace;\n        margin:3rem 0;\n        padding-left: 2rem;\n        h2{\n            font-size:2.2rem;\n            color: ${props => props.theme.colors.blue};\n            margin: 1rem 0;\n            padding: 1rem 0 0 0;\n        }\n        p{\n            margin: 0 0 2rem 0;\n            padding: 0 0 2rem 0;\n            line-height:1.2;\n            font-size:2rem;\n        }\n    }\n`\n\nconst ParagraphContainer = styled.div`\n    p{\n        font-size:2rem;\n        line-height:1.6;\n    }\n`\n\ninterface QuoteProps {\n    quote:string,\n    title:string,\n    answer:any,\n}\n\nclass Quote extends React.Component<QuoteProps> {\n    constructor(props:QuoteProps){\n        super(props);\n        this.pRef = React.createRef()\n    }\n    \n    state = {\n        showParagraph:false\n    }\n\n    pRef:any\n\n    _renderAnswer = ():JSX.Element[] => {\n        let copy = {...this.props.answer};\n        let arrayOfPargraph = Object.values(copy);\n        return arrayOfPargraph.map((paragraph:any) => <p>{paragraph}</p>)\n    }\n\n    toggleParagraph = ():void => {\n        \n        this.setState({\n            showParagraph:!this.state.showParagraph\n        }, () => {\n            if(this.pRef) {\n                window.scrollTo(this.pRef)\n            }\n        }\n        )\n    }\n\n    render(){\n        const props = this.props\n        const {showParagraph} = this.state\n\n        return (\n            <QuoteContainer>\n            <Blockquote \n                title={props.title}\n                quote={props.quote}\n                toggleParagraph={this.toggleParagraph} \n                showParagraph={this.state.showParagraph}\n                />\n            {\n                props.answer && showParagraph ?\n                <ParagraphContainer ref={this.pRef}>\n                    {this._renderAnswer()}\n                </ParagraphContainer>\n                :\n                null\n            }\n        </QuoteContainer>\n    )\n}\n}\n\nexport default Quote\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAEA;AAIA;AAJA;AAKA;AALA;AAWA;AAXA;AAwBA;AACA;AAYA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAMA;AADA;AACA;AANA;AAYA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdA;AACA;AADA;AAmBA;AACA;AADA;AAGA;AACA;AACA;AALA;AAnBA;AACA;AACA;AAFA;AAGA;AACA;;;AAyBA;AACA;AADA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AApDA;AACA;AAsDA;;;;A","sourceRoot":""}